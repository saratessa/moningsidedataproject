---
title: "index"
format: html
editor: visual
---

Tidying Deidentified Data

Load Packages

```{r}
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(janitor) 
library(readxl)
```

Bring in Identified Data, Merge Cohorts, Remove Names (2008-2009 and 2009-2010)

(Note: this code is for first import and is DONE: cohort1.csv is in the repo)

```{r}
#Bringing in year 1

df_2008 <- read_excel("G:/My Drive/3. Research/Morningside Data Project/identified data files/2008-2009 pre-post.xlsx") %>%
  clean_names() %>%
  mutate(year_start = 2008)

#Switching wide to long, renaming spring/fall to time 1 and 2

df_2008<- df_2008 %>%
  pivot_longer(
    cols = c(starts_with("FALL"), starts_with("SPRING")),
    names_to = c("Season", "Measure"),
    names_sep = "_",
    values_to = "Score"
  ) %>%
  mutate(
    Season = str_to_lower(Season),
    Time = case_when(
      Season == "fall" ~ 1,
      Season == "spring" ~ 2,
      TRUE ~ NA_real_
    )
  ) %>%
  select(-Season) 

view(df_2008)

#Bringing in year 2

df_2009 <- read_excel("G:/My Drive/3. Research/Morningside Data Project/identified data files/2009-2010 pre_post.xlsx") %>%
  clean_names() %>%
  mutate(year_start = 2009)

#Switching wide to long, renaming spring/fall to time 1 and 2

df_2009<- df_2009 %>%
  pivot_longer(
    cols = c(starts_with("FALL"), starts_with("SPRING")),
    names_to = c("Season", "Measure"),
    names_sep = "_",
    values_to = "Score"
  ) %>%
  mutate(
    Season = str_to_lower(Season),
    Time = case_when(
      Season == "fall" ~ 1,
      Season == "spring" ~ 2,
      TRUE ~ NA_real_
    )
  ) %>%
  select(-Season) 

view(df_2009)

#Binding year 1 and year 2 into the same frame

cohort1 <- bind_rows(df_2008, df_2009)
view(cohort1)

#Group by student and assign ID number

cohort1 <- cohort1 %>%
  group_by(name) %>%
  mutate(
    studentnum = cur_group_id(),
    id = paste0(studentnum, "0810") #for 2008-2010 cohort id
  ) %>%
  ungroup() %>%
  select(-studentnum) %>%
  select(-name) %>%
  relocate(id)


view(cohort1)

#export de-identified CSV 
#Delete identified data frames from environment and proceed using cohort1.csv

write_csv(cohort1, "cohort1.csv")
rm(df_2008, df_2009, cohort1)
```

Bring in Identified Data, Merge Cohorts, Remove Names (2015-2016 and 2016-2017)

(Note: this code is for first import)

Also note: we will have to do this again once we have grade levels for the 2016-2017 data

```{r}
#Bringing in year 1

df_2015 <- read_excel("G:/My Drive/3. Research/Morningside Data Project/identified data files/2015-2016 pre-post.xlsx") %>%
  clean_names() %>%
  mutate(year_start = 2015)

#Switching wide to long, renaming spring/fall to time 1 and 2

df_2015<- df_2015 %>%
  pivot_longer(
    cols = c(starts_with("FALL"), starts_with("SPRING")),
    names_to = c("Season", "Measure"),
    names_sep = "_",
    values_to = "Score"
  ) %>%
  mutate(
    Season = str_to_lower(Season),
    Time = case_when(
      Season == "fall" ~ 1,
      Season == "spring" ~ 2,
      TRUE ~ NA_real_
    )
  ) %>%
  select(-Season) 

view(df_2015)

#Bringing in year 2

df_2016 <- read_excel("G:/My Drive/3. Research/Morningside Data Project/identified data files/2016-2017 pre-post.xlsx") %>%
  clean_names() %>%
  mutate(year_start = 2016)

#Switching wide to long, renaming spring/fall to time 1 and 2

df_2016<- df_2016 %>%
  pivot_longer(
    cols = c(starts_with("FALL"), starts_with("SPRING")),
    names_to = c("Season", "Measure"),
    names_sep = "_",
    values_to = "Score"
  ) %>%
  mutate(
    Season = str_to_lower(Season),
    Time = case_when(
      Season == "fall" ~ 1,
      Season == "spring" ~ 2,
      TRUE ~ NA_real_
    )
  ) %>%
  select(-Season) 

view(df_2016)

#Binding year 1 and year 2 into the same frame

cohort2 <- bind_rows(df_2015, df_2016)
view(cohort2)

#Group by student and assign ID number

cohort2 <- cohort2 %>%
  group_by(name) %>%
  mutate(
    studentnum = cur_group_id(),
    id = paste0(studentnum, "1517") #for 2015-2017 cohort id
  ) %>%
  ungroup() %>%
  select(-studentnum) %>%
  select(-name) %>%
  relocate(id)


view(cohort2)

#export de-identified CSV 
#Delete identified data frames from environment and proceed using cohort1.csv

write_csv(cohort2, "cohort2.csv")
rm(df_2015, df_2016, cohort2)


```

Prep for Multilevel Modeling

Cohort 1 Code

```{r}
df1 <- read.csv("cohort1.csv")
df2 <- read.csv("cohort2.csv")

head(df1)
head(df2)

#make sure dfs are a dataframe and not a function
class(df)

#cleaning names and variable types
colnames(df)
names(df)<- c("id", "grade", "cal_year", "measure", "score", "time")
df <- df %>%
  mutate(
    id = as.factor(id),
    cal_year = as.numeric(cal_year),
    grade = as.numeric(grade),
    time = as.numeric(time),     # 1 = fall, 2 = spring
    measure = as.factor(measure),
    score = as.numeric(score)
  )

#add a column to indicate program_year 1 or 2

df <- df %>%
  group_by(id) %>%
  mutate(
    # find the student's earliest year
    first_year = min(cal_year, na.rm = TRUE),
    # calculate how many years since the student's first year
    program_year = cal_year - first_year + 1
  ) %>%
     select(-first_year)
  ungroup()

#student_year identifier
df <- df %>%
  mutate(student_year = paste(id, cal_year, sep = "_"))

#adding a column indicating literacy or math

df <- df %>%
  mutate(
    domain_type = case_when(
      measure %in% c("rc", "lang", "cap", "punc", "ue", "lwid", "wa", "rf", "wf", "ws") ~ "literacy",
      measure %in% c("ce", "psdi", "comp", "mf", "maths", "calc") ~ "math",
      TRUE ~ "other"
    )
  )

#adding a column with difference from score to actual grade level

df <- df %>%
  mutate(
    grade_diff = score - grade
  )

#adding columns for centered variables 

df <- df %>%
  mutate(
    grade_diff_c = grade_diff - mean(grade_diff, na.rm = TRUE), #interprets effect of being above/below average
    time_c = time - 1.5                                 # fall -.05 spring .05 for interpretability
  )

view(df)

#Save over cohort1.csv so you don't have to do this part every time
write_csv(df, "cohort1.csv")
```

Note: We'll need another code chunk here to figure out how to merge the separate cohorts into one giant dataframe

```{r}
#saving a spot for that
```

Multilevel Modeling

```{r}
#if starting here with de-identified and cleaned file 
df <- cohort1
view(df)
```

\*\*Leaving off here without having checked anything about the model below or it's interpretation!! 10/4

```{r}
library("lme4")
library("lmerTest")

# 3. Three-level multilevel model
# Outcome: score
# Predictors: time, grade_diff, domain_type
# Random effects: student intercept + slope, program year intercept
# -----------------------------
model <- lmer(
  score ~ time_c * domain_type + grade_diff_c + 
    (1 + time_c | id) +      # random intercept & slope for student
    (1 | program_year),      # random intercept for program year
  data = df,
  REML = TRUE
)

summary(model)


```
